apply plugin: 'maven'

// local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// maven repository url
def repo_url_release = properties.getProperty("repo.url.release")
def repo_url_snapshot = properties.getProperty("repo.url.snapshot")

// username and password
def repo_user_name = properties.getProperty("repo.user.name")
def repo_user_password = properties.getProperty("repo.user.password")

// group:artifact:version
def repo_group =  properties.getProperty("repo.group")
def repo_artifact =  properties.getProperty("repo.artifact")
def repo_version =  properties.getProperty("repo.version")

def isSnapshotBuild = repo_version.contains("SNAPSHOT")

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError = false
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    if (!isSnapshotBuild) {
        archives javadocJar
        archives sourcesJar
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: repo_url_snapshot) {
                authentication(userName: repo_user_name, password: repo_user_password)
            }
            repository(url: repo_url_release) {
                authentication(userName: repo_user_name, password: repo_user_password)
            }
            pom.project {
                groupId repo_group
                artifactId repo_artifact
                version repo_version
                packaging 'aar'
            }

            println 'Group Id：' + repo_group
            println 'Artifact：' + repo_artifact
            println 'Version：' + repo_version
            println 'Maven Repository：' + (isSnapshotBuild ? repo_url_snapshot : repo_url_release)
        }
    }
}